#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int FailTable(char pat[]) {
	int patlen = strlen(pat);
	int *table = (int*)malloc(sizeof(int) * patlen);
	//0으로 초기화?
	int i, j = 0;
	for (i = 1; i < patlen; i++) {
		while (j > 0 && pat[i] != pat[j]) { //j가 0보다 크고 패턴끼리 일치하지 않으면
			j = table[j - 1]; //j를 이전 단계로 하락시킴
		}
		if (pat[i] == pat[j]) {
			table[i] = ++j;
		}
	}
	return table;
}
void KMPsearch(char str[], char pat[]) {
	int *table = FailTable(pat); //???
	int stringlen = strlen(str);
	int patternlen = strlen(pat);
	int j = 0;
	for (int i = 0; i < stringlen; i++) { //문자열의 길이만큼
		while (j > 0 && str[i] != pat[j]) {
			j = table[j - 1];
		}
		if (j == patternlen - 1) {
			printf("Found the pattern from the location %d!\n", i - patternlen + 2); // ?
			j = table[j];
		}
		else {
			j++;
		}

	}

}

int main() {
	char *pattern = "abcdhweradvbabcdabcdef";
	char *find = "abc";
	KMPsearch(find, pattern);
	return 0;
}
